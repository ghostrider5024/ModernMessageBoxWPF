<Window
    x:Class="ModernMessageBoxWPF.UI.ModernMessageBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:ModernMessageBoxWPF.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ModernMessageBoxWPF.UI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:selectors="clr-namespace:ModernMessageBoxWPF.Selectors"
    xmlns:vm="clr-namespace:ModernMessageBoxWPF.ViewModels"
    d:DataContext="{d:DesignInstance vm:ModernMessageBoxViewModel}"
    AllowsTransparency="True"
    Background="Transparent"
    Closing="Window_Closing"
    Loaded="Window_Loaded"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SizeToContent="Manual"
    WindowStartupLocation="CenterOwner"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="BaseRaisedButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Inter" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="16,4" />
            <Setter Property="Height" Value="32" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

        </Style>

        <Style
            x:Key="DefaultCancelButtonStyle"
            BasedOn="{StaticResource BaseRaisedButtonStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <!--  Blue  -->
            <Setter Property="Foreground" Value="{DynamicResource PrimaryBg}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBg}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Content" Value="Hủy" />


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Border>

                        <ControlTemplate.Triggers>

                            <!--  Pressed animation  -->


                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="{StaticResource HoveredPrimaryBg_Color}"
                                                Duration="0:0:0.2" />
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="{StaticResource HoveredPrimaryBg_Color}"
                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="{StaticResource PrimaryText_Color}"
                                                Duration="0:0:0.2" />
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="{StaticResource PrimaryBg_Color}"
                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--  Hover animation  -->

                            <!--  Disabled style  -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledBg}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource DisabledBg}" />
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
                    <Setter Property="Background" Value="{DynamicResource PrimaryBg}" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
                    <Setter Property="Background" Value="{DynamicResource PressedBg}" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style
            x:Key="DefaultConfirmButtonStyle"
            BasedOn="{StaticResource BaseRaisedButtonStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource PrimaryBg}" />
            <!--  Blue  -->
            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBg}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Content" Value="Xác nhận" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Border>

                        <ControlTemplate.Triggers>

                            <!--  Pressed animation  -->


                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="{StaticResource PressedBg_Color}"
                                                Duration="0:0:0.2" />
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="{StaticResource PressedBg_Color}"
                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="{StaticResource PrimaryBg_Color}"
                                                Duration="0:0:0.2" />
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="{StaticResource PrimaryBg_Color}"
                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--  Hover animation  -->

                            <!--  Disabled style  -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledBg}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource DisabledBg}" />
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
                    <Setter Property="Background" Value="{DynamicResource PressedBg}" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
                    <Setter Property="Background" Value="{DynamicResource PressedBg}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DefaultRootStyle" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource ModernMessageBoxBackground}" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="Padding" Value="15,15,15,10" />
        </Style>

        <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
            <Setter Property="Foreground" Value="#212121" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="10,6" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="Background" Value="White" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Margin="0"
                                VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryBg}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Foreground" Value="#212121" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="10,6" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="Background" Value="White" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Margin="0"
                                VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryBg}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <selectors:InputTypeTemplateSelector x:Key="MyInputTypeTemplateSelector">
            <selectors:InputTypeTemplateSelector.NormalTemplate>
                <DataTemplate>
                    <TextBlock
                        Margin="0,0,0,20"
                        FontFamily="Inter"
                        FontSize="14"
                        Text="{Binding DataContext.Message, RelativeSource={RelativeSource AncestorType=local:ModernMessageBox}}"
                        TextWrapping="Wrap" />
                </DataTemplate>
            </selectors:InputTypeTemplateSelector.NormalTemplate>

            <selectors:InputTypeTemplateSelector.InputTextTemplate>
                <DataTemplate>
                    <TextBox
                        Margin="0,0,0,20"
                        Style="{StaticResource ModernTextBox}"
                        Text="{Binding DataContext.Value, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=local:ModernMessageBox}}" />
                </DataTemplate>
            </selectors:InputTypeTemplateSelector.InputTextTemplate>

            <selectors:InputTypeTemplateSelector.InputPasswordTemplate>
                <DataTemplate>
                    <PasswordBox
                        Margin="0,0,0,20"
                        behaviors:PasswordBoxHelper.BindPassword="True"
                        behaviors:PasswordBoxHelper.BoundPassword="{Binding DataContext.Value, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=local:ModernMessageBox}}"
                        Style="{StaticResource ModernPasswordBox}" />
                </DataTemplate>
            </selectors:InputTypeTemplateSelector.InputPasswordTemplate>
        </selectors:InputTypeTemplateSelector>


    </Window.Resources>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Border
            x:Name="Root"
            MinWidth="320"
            MinHeight="220"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            RenderTransformOrigin="0.5,0.5"
            Style="{StaticResource DefaultRootStyle}">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1" />
                    <RotateTransform x:Name="Rotate" Angle="0" />
                    <TranslateTransform x:Name="Translate" X="0" Y="0" />
                </TransformGroup>
            </Border.RenderTransform>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="8*" />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Margin="0,0,0,10"
                    Padding="0,10,0,0"
                    FontFamily="Inter"
                    FontSize="18"
                    FontWeight="Bold">
                    <Run Foreground="{DynamicResource PrimaryBg}" Text="{Binding Type, Mode=OneWay, Converter={StaticResource DialogIconConverter}}" />
                    <Run Foreground="{DynamicResource PrimaryBg}" Text="{Binding Title, Mode=OneWay}" />

                </TextBlock>

                <!--<TextBlock
                    Grid.Row="2"
                    Margin="0,0,0,20"
                    FontFamily="Inter"
                    FontSize="14"
                    Text="{Binding Message, Mode=OneWay}"
                    TextWrapping="Wrap" />

                <TextBox
                    Grid.Row="2"
                    Height="auto"
                    Margin="0,0,0,20"
                    behaviors:PasswordBoxHelper.BindPassword="True"
                    behaviors:PasswordBoxHelper.BoundPassword="{Binding Value, Mode=TwoWay}"
                    Style="{StaticResource ModernTextBox}" />

                <PasswordBox
                    Grid.Row="2"
                    Height="auto"
                    Margin="0,0,0,20"
                    behaviors:PasswordBoxHelper.BindPassword="True"
                    behaviors:PasswordBoxHelper.BoundPassword="{Binding Value, Mode=TwoWay}"
                    Style="{StaticResource ModernPasswordBox}" />-->

                <ContentControl
                    Grid.Row="2"
                    Content="{Binding InputType}"
                    ContentTemplateSelector="{StaticResource MyInputTypeTemplateSelector}" />


                <StackPanel
                    Grid.Row="4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Orientation="Horizontal">
                    <Button
                        MinWidth="80"
                        Margin="5"
                        Command="{Binding CancelCommand}"
                        Style="{Binding RelativeSource={RelativeSource AncestorType=local:ModernMessageBox}, Path=CancelButtonStyle}" />
                    <Button
                        MinWidth="80"
                        Margin="5"
                        Command="{Binding ConfirmCommand}"
                        Style="{Binding RelativeSource={RelativeSource AncestorType=local:ModernMessageBox}, Path=ConfirmButtonStyle}" />
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>
